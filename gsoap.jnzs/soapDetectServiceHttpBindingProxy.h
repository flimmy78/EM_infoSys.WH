/* soapDetectServiceHttpBindingProxy.h
   Generated by gSOAP 2.8.21 from mds.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapDetectServiceHttpBindingProxy_H
#define soapDetectServiceHttpBindingProxy_H
#include "soapH.h"

class SOAP_CMAC DetectServiceHttpBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'DetectServiceHttpBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Variables globally declared in mds.h (non-static)
	/// Constructor
	DetectServiceHttpBindingProxy();
	/// Construct from another engine state
	DetectServiceHttpBindingProxy(const struct soap&);
	/// Constructor with endpoint URL
	DetectServiceHttpBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	DetectServiceHttpBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	DetectServiceHttpBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	DetectServiceHttpBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~DetectServiceHttpBindingProxy();
	/// Initializer used by constructors
	virtual	void DetectServiceHttpBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'getSealInfo' (returns error code or SOAP_OK)
	virtual	int getSealInfo(_ns1__getSealInfo *ns1__getSealInfo, _ns1__getSealInfoResponse &ns1__getSealInfoResponse) { return this->getSealInfo(NULL, NULL, ns1__getSealInfo, ns1__getSealInfoResponse); }
	virtual	int getSealInfo(const char *endpoint, const char *soap_action, _ns1__getSealInfo *ns1__getSealInfo, _ns1__getSealInfoResponse &ns1__getSealInfoResponse);

	/// Web service operation 'uploadLabel' (returns error code or SOAP_OK)
	virtual	int uploadLabel(_ns1__uploadLabel *ns1__uploadLabel, _ns1__uploadLabelResponse &ns1__uploadLabelResponse) { return this->uploadLabel(NULL, NULL, ns1__uploadLabel, ns1__uploadLabelResponse); }
	virtual	int uploadLabel(const char *endpoint, const char *soap_action, _ns1__uploadLabel *ns1__uploadLabel, _ns1__uploadLabelResponse &ns1__uploadLabelResponse);

	/// Web service operation 'sendCtrlTaskFinishFlag' (returns error code or SOAP_OK)
	virtual	int sendCtrlTaskFinishFlag(_ns1__sendCtrlTaskFinishFlag *ns1__sendCtrlTaskFinishFlag, _ns1__sendCtrlTaskFinishFlagResponse &ns1__sendCtrlTaskFinishFlagResponse) { return this->sendCtrlTaskFinishFlag(NULL, NULL, ns1__sendCtrlTaskFinishFlag, ns1__sendCtrlTaskFinishFlagResponse); }
	virtual	int sendCtrlTaskFinishFlag(const char *endpoint, const char *soap_action, _ns1__sendCtrlTaskFinishFlag *ns1__sendCtrlTaskFinishFlag, _ns1__sendCtrlTaskFinishFlagResponse &ns1__sendCtrlTaskFinishFlagResponse);

	/// Web service operation 'uploadSealsCode' (returns error code or SOAP_OK)
	virtual	int uploadSealsCode(_ns1__uploadSealsCode *ns1__uploadSealsCode, _ns1__uploadSealsCodeResponse &ns1__uploadSealsCodeResponse) { return this->uploadSealsCode(NULL, NULL, ns1__uploadSealsCode, ns1__uploadSealsCodeResponse); }
	virtual	int uploadSealsCode(const char *endpoint, const char *soap_action, _ns1__uploadSealsCode *ns1__uploadSealsCode, _ns1__uploadSealsCodeResponse &ns1__uploadSealsCodeResponse);

	/// Web service operation 'sendTaskFinishFlag' (returns error code or SOAP_OK)
	virtual	int sendTaskFinishFlag(_ns1__sendTaskFinishFlag *ns1__sendTaskFinishFlag, _ns1__sendTaskFinishFlagResponse &ns1__sendTaskFinishFlagResponse) { return this->sendTaskFinishFlag(NULL, NULL, ns1__sendTaskFinishFlag, ns1__sendTaskFinishFlagResponse); }
	virtual	int sendTaskFinishFlag(const char *endpoint, const char *soap_action, _ns1__sendTaskFinishFlag *ns1__sendTaskFinishFlag, _ns1__sendTaskFinishFlagResponse &ns1__sendTaskFinishFlagResponse);

	/// Web service operation 'applyAssistEquip' (returns error code or SOAP_OK)
	virtual	int applyAssistEquip(_ns1__applyAssistEquip *ns1__applyAssistEquip, _ns1__applyAssistEquipResponse &ns1__applyAssistEquipResponse) { return this->applyAssistEquip(NULL, NULL, ns1__applyAssistEquip, ns1__applyAssistEquipResponse); }
	virtual	int applyAssistEquip(const char *endpoint, const char *soap_action, _ns1__applyAssistEquip *ns1__applyAssistEquip, _ns1__applyAssistEquipResponse &ns1__applyAssistEquipResponse);

	/// Web service operation 'getDETedTestData' (returns error code or SOAP_OK)
	virtual	int getDETedTestData(_ns1__getDETedTestData *ns1__getDETedTestData, _ns1__getDETedTestDataResponse &ns1__getDETedTestDataResponse) { return this->getDETedTestData(NULL, NULL, ns1__getDETedTestData, ns1__getDETedTestDataResponse); }
	virtual	int getDETedTestData(const char *endpoint, const char *soap_action, _ns1__getDETedTestData *ns1__getDETedTestData, _ns1__getDETedTestDataResponse &ns1__getDETedTestDataResponse);

	/// Web service operation 'setResults' (returns error code or SOAP_OK)
	virtual	int setResults(_ns1__setResults *ns1__setResults, _ns1__setResultsResponse &ns1__setResultsResponse) { return this->setResults(NULL, NULL, ns1__setResults, ns1__setResultsResponse); }
	virtual	int setResults(const char *endpoint, const char *soap_action, _ns1__setResults *ns1__setResults, _ns1__setResultsResponse &ns1__setResultsResponse);

	/// Web service operation 'getMachineHandInfo' (returns error code or SOAP_OK)
	virtual	int getMachineHandInfo(_ns1__getMachineHandInfo *ns1__getMachineHandInfo, _ns1__getMachineHandInfoResponse &ns1__getMachineHandInfoResponse) { return this->getMachineHandInfo(NULL, NULL, ns1__getMachineHandInfo, ns1__getMachineHandInfoResponse); }
	virtual	int getMachineHandInfo(const char *endpoint, const char *soap_action, _ns1__getMachineHandInfo *ns1__getMachineHandInfo, _ns1__getMachineHandInfoResponse &ns1__getMachineHandInfoResponse);

	/// Web service operation 'applyEquip' (returns error code or SOAP_OK)
	virtual	int applyEquip(_ns1__applyEquip *ns1__applyEquip, _ns1__applyEquipResponse &ns1__applyEquipResponse) { return this->applyEquip(NULL, NULL, ns1__applyEquip, ns1__applyEquipResponse); }
	virtual	int applyEquip(const char *endpoint, const char *soap_action, _ns1__applyEquip *ns1__applyEquip, _ns1__applyEquipResponse &ns1__applyEquipResponse);

	/// Web service operation 'getDBConnInfo' (returns error code or SOAP_OK)
	virtual	int getDBConnInfo(_ns1__getDBConnInfo *ns1__getDBConnInfo, _ns1__getDBConnInfoResponse &ns1__getDBConnInfoResponse) { return this->getDBConnInfo(NULL, NULL, ns1__getDBConnInfo, ns1__getDBConnInfoResponse); }
	virtual	int getDBConnInfo(const char *endpoint, const char *soap_action, _ns1__getDBConnInfo *ns1__getDBConnInfo, _ns1__getDBConnInfoResponse &ns1__getDBConnInfoResponse);

	/// Web service operation 'equipCheckInfo' (returns error code or SOAP_OK)
	virtual	int equipCheckInfo(_ns1__equipCheckInfo *ns1__equipCheckInfo, _ns1__equipCheckInfoResponse &ns1__equipCheckInfoResponse) { return this->equipCheckInfo(NULL, NULL, ns1__equipCheckInfo, ns1__equipCheckInfoResponse); }
	virtual	int equipCheckInfo(const char *endpoint, const char *soap_action, _ns1__equipCheckInfo *ns1__equipCheckInfo, _ns1__equipCheckInfoResponse &ns1__equipCheckInfoResponse);

	/// Web service operation 'validDetectRslt' (returns error code or SOAP_OK)
	virtual	int validDetectRslt(_ns1__validDetectRslt *ns1__validDetectRslt, _ns1__validDetectRsltResponse &ns1__validDetectRsltResponse) { return this->validDetectRslt(NULL, NULL, ns1__validDetectRslt, ns1__validDetectRsltResponse); }
	virtual	int validDetectRslt(const char *endpoint, const char *soap_action, _ns1__validDetectRslt *ns1__validDetectRslt, _ns1__validDetectRsltResponse &ns1__validDetectRsltResponse);

	/// Web service operation 'boxCheckInfo' (returns error code or SOAP_OK)
	virtual	int boxCheckInfo(_ns1__boxCheckInfo *ns1__boxCheckInfo, _ns1__boxCheckInfoResponse &ns1__boxCheckInfoResponse) { return this->boxCheckInfo(NULL, NULL, ns1__boxCheckInfo, ns1__boxCheckInfoResponse); }
	virtual	int boxCheckInfo(const char *endpoint, const char *soap_action, _ns1__boxCheckInfo *ns1__boxCheckInfo, _ns1__boxCheckInfoResponse &ns1__boxCheckInfoResponse);

	/// Web service operation 'upBoxInputPileDet' (returns error code or SOAP_OK)
	virtual	int upBoxInputPileDet(_ns1__upBoxInputPileDet *ns1__upBoxInputPileDet, _ns1__upBoxInputPileDetResponse &ns1__upBoxInputPileDetResponse) { return this->upBoxInputPileDet(NULL, NULL, ns1__upBoxInputPileDet, ns1__upBoxInputPileDetResponse); }
	virtual	int upBoxInputPileDet(const char *endpoint, const char *soap_action, _ns1__upBoxInputPileDet *ns1__upBoxInputPileDet, _ns1__upBoxInputPileDetResponse &ns1__upBoxInputPileDetResponse);

	/// Web service operation 'getAlarm' (returns error code or SOAP_OK)
	virtual	int getAlarm(_ns1__getAlarm *ns1__getAlarm, _ns1__getAlarmResponse &ns1__getAlarmResponse) { return this->getAlarm(NULL, NULL, ns1__getAlarm, ns1__getAlarmResponse); }
	virtual	int getAlarm(const char *endpoint, const char *soap_action, _ns1__getAlarm *ns1__getAlarm, _ns1__getAlarmResponse &ns1__getAlarmResponse);

	/// Web service operation 'uploadPackInfo' (returns error code or SOAP_OK)
	virtual	int uploadPackInfo(_ns1__uploadPackInfo *ns1__uploadPackInfo, _ns1__uploadPackInfoResponse &ns1__uploadPackInfoResponse) { return this->uploadPackInfo(NULL, NULL, ns1__uploadPackInfo, ns1__uploadPackInfoResponse); }
	virtual	int uploadPackInfo(const char *endpoint, const char *soap_action, _ns1__uploadPackInfo *ns1__uploadPackInfo, _ns1__uploadPackInfoResponse &ns1__uploadPackInfoResponse);
};
#endif
